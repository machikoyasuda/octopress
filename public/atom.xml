<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title><![CDATA[From the desk of Machiko Yasuda]]></title>
	<link href="http://pacific-escarpment-7101.herokuapp.com//atom.xml" rel="self"/>
	<link href="http://pacific-escarpment-7101.herokuapp.com//"/>
	<updated>2013-06-17T14:08:46-07:00</updated>
	<id>http://pacific-escarpment-7101.herokuapp.com//</id>
	<author>
		<name><![CDATA[Machiko Yasuda]]></name>
		
	</author>
	<generator uri="http://octopress.org/">Octopress</generator>

	
	<entry>
		
			<title type="html"><![CDATA[day one]]></title>
		
		<link href="http://pacific-escarpment-7101.herokuapp.com//blog/2013/06/17/day-one/"/>
		<updated>2013-06-17T14:03:00-07:00</updated>
		<id>http://pacific-escarpment-7101.herokuapp.com//blog/2013/06/17/day-one</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>&ldquo;One of the biggest problems on software development teams in communication.&rdquo;</p>

<p>Try to tackle learning by problem-first, project-first, rather than requirements-first.</p>

<p>The first part of a project is coming up with the problem, planning the data structure and sketching a wireframe. The data structure tree and the wireframes are mostly a communication tool — you can bring it up to colleagues and bosses and start talking about specifics.</p>

<p>In the same way we&rsquo;d plan how to schedule our project time, we can schedule our learning as well.</p>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[What I've done so far]]></title>
		
		<link href="http://pacific-escarpment-7101.herokuapp.com//blog/2013/06/17/so-far/"/>
		<updated>2013-06-17T02:21:00-07:00</updated>
		<id>http://pacific-escarpment-7101.herokuapp.com//blog/2013/06/17/so-far</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>Start from the beginning:</p>

<ul>
<li>Learn Command Line the Hard Way</li>
<li>Codecademy: Web Fundamentals</li>
<li>Code School: HTML5, CSS3, Responsive Design, Sass, Try Ruby, Try Git</li>
<li>Learn Ruby the Hard Way, Zed Shaw</li>
<li>Learn to Program, Chris Pine</li>
<li>Codecademy: Ruby, Using APIs with Ruby</li>
<li>Ruby Koans</li>
</ul>

]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Ignorant humility]]></title>
		
		<link href="http://pacific-escarpment-7101.herokuapp.com//blog/2013/06/15/on-learning/"/>
		<updated>2013-06-15T06:38:00-07:00</updated>
		<id>http://pacific-escarpment-7101.herokuapp.com//blog/2013/06/15/on-learning</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<p>More gems from Ellen Ullman&rsquo;s &ldquo;Close to the Machine&rdquo;:</p>

<blockquote><p>&ldquo;And I&rsquo;ll have to muddle through without certainties. Without my father&rsquo;s belief that the machinery of capital, if you worked hard and log, was benign in the long run, so benign you could even own a piece of it. Without my generation&rsquo;s macho leftism, which made us think we could smash the machine and build a better one&hellip; But all that can wait.</p>

<p>&ldquo;I&rsquo;ve managed to stay in a perpetual state of learning only by maintaining what I think of as a posture of ignorant humility. This humility is as mandatory as arrogance&hellip; There is only one way to deal with this humiliation: bow you head, let go of the idea that you know anything, and ask politely of this new machine &#8220;How do you wish to be operated?&rdquo; If you accept your ignorance, once you really admit to yourself that everything you know is now useless, the new machine will be good to you and tell you: here is how to operate me.&#8221;</p>

<p>&ldquo;The corollary to constant change is ignorance. This is not often talked about: we computer experts barely know what we&rsquo;re doing. We&rsquo;re good at fussing and figuring out. We function well in a sea of unknowns. Our experience has only prepared us to deal with confusion. A programmer who denies this is probably lying, or else densely unaware of himself.&rdquo;</p></blockquote>
]]>
		</content>
	</entry>
	
	<entry>
		
			<title type="html"><![CDATA[Start at 0]]></title>
		
		<link href="http://pacific-escarpment-7101.herokuapp.com//blog/2013/06/06/start-at-zero/"/>
		<updated>2013-06-06T16:53:16-07:00</updated>
		<id>http://pacific-escarpment-7101.herokuapp.com//blog/2013/06/06/start-at-zero</id>
		<content type="html">
			<![CDATA[
				
					<p></p>
				
			]]>
			<![CDATA[<blockquote><p>For now, I&rsquo;m just going to enjoy where I am: beginning of a new contract, the rocket-takeoff learning curve, the exquisite terror of it, the straight-up ride against gravity into a trajectory not yet calculated.</p>

<p>The next time I drive down to the company, a fog hangs lead-gray over the bay. It lingers over all the East Bay cities. Then, where the freeway turns inland, the fog lifts and thins, and the sky turns a sheer glare-white. I race past the trucks, the hills shine deep green in the clear light, and for that moment, I&rsquo;m just where I&rsquo;m supposed to be: driving a fast car to a place I don&rsquo;t know yet, where anything can happen.&ldquo; — Ellen Ullman, <a href="www.robinsloan.com/summer-reading/and-programming/">Close to the Machine</a></p></blockquote>

<p>Something funny happened between moving out, moving around to a small town you never knew existed, where you don&rsquo;t know anyone at all. I remember after the third, fourth, fifth day of coming home from work and running the same routine of dinner, radio, reading. We joked with friends we needed to &ldquo;find hobbies&rdquo; or something.</p>

<p>Fast forward many more days &mdash; what seemed like a dull small town was actually a blank canvas for learning and trying new things. I read over 60 books &ndash; or over 20,000 pages &ndash; nearly all from local libraries. I bicycled hundreds and hundreds of miles, up the steepest climbs on Highway 150, along the Pacific Ocean on the 101, along the Ventura River, in the video game maze of obstacles that is downtown LA.</p>

<p>I rode in a group of people twice, thrice my age (who are still much stronger than me). I once rode in a women&rsquo;s bike shop ride &ndash; the &ldquo;Serious Beginners&rdquo; group. A serious beginner.</p>

<p>I committed to memory the names of bicycle frame parts. I looked at diagrams, wrote my own and made sure to incorporate the vocabulary into my speech. I rode every weekend. I had no expectations for myself &ndash; I was just exploring. I never thought of myself as athletic, this was just for fun.</p>

<p>Other things come from a combination of muscle memory, mnemonics and understanding the logic: right hand controls rear brake and rear gears. You have to turn your bike upside down and watch the derailleur move the chain up and down. And after a nearly-never-ending uphill ride, I still remember how my right fingers felt when I realized I had reached my lowest gear. After that hill-climb shifting fiasco, I read a book to learn gear ratios and strategies. I watched videos, got my hands dirty while learning how to fix a flat, fell off the bike as I learned clipless pedals. (I cried after the first time.) (I almost gave up. But I didn&rsquo;t.) Something about that satisfaction of making it up a hill you&rsquo;d never think of doing and getting over it kept me going.</p>

<p>If I learned anything at all, it was how to learn. Just start. Repetition, enthusiasm, curiosity. Don&rsquo;t do it alone. Learn something, teach something. Find a good book (or two). Read some history. But most importantly, drop all expectations and anxiety and just start.</p>

<div class="highlight"><pre><code class="ruby"><span class="k">def</span> <span class="nf">print_hello</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">&quot;Hello, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="k">end</span>
<span class="n">print_hello</span><span class="p">(</span><span class="s1">&#39;World&#39;</span><span class="p">)</span>
<span class="c1">#=&gt; prints &#39;Hello, world.&#39;</span>
</code></pre></div>



]]>
		</content>
	</entry>
	
</feed>
